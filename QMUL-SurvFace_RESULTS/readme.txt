Surveillance Face Recognition Challenge# ======================== Dataset Structure ========================== #"Training_Set": Ordered by face identities, i.e. each directory contains face images from a specific training identity. There are a total of 5,319 directories each is named by the corresponding identity. The image file name is in format of [PersonID]_[CameraID]_[ImageName].jpg."Face_Identification_Test_Set"           -"gallery": containing 60,294 gallery images from 5,319 test identities (IDs).           -"mated_probe": containing 60,423 probe images from 5,319 test IDs, with mated gallery true match images in the "gallery" folder.           -"unmated_probe": containing 12,1736 distractor probe face images without mated gallery true match images in the "gallery" folder, i.e. the open-set face identification scenario.           -"gallery_img_ID_pairs.mat": the gallery image names and the corresponding face IDs           -"mated_probe_img_ID_pairs.mat": the mated probe image names and the corresponding face IDs"Face_Verification_Test_Set":                                  -"verification_images": containing 10,051 images, a subset of the whole test set, randomly sampled to build 5,320 positive and 5,320 negative pairs                      -"positive_pairs_names.mat": 5320_by_2 cell specifying the image pairs of 5,320 positive pairs           -"negative_pairs_names.mat": 5320_by_2 cell specifying the image pairs of 5,320 negative pairs# ======================== Evaluation Instruction ========================== #*** Open-Set Face Identification Evaluation ("Face_Identification_Evaluation") *** 1. Extract features of "gallery" images according to the order defined by "gallery_img_ID_pairs.mat", put them in a matrix called "gallery_feature_map" ([image_number]_by_[feature_dimension]), and save the matrix in a mat file named "gallery.mat"2. Extract features of "mated_probe" images according to the order defined by "mated_probe_img_ID_pairs.mat", put them in a matrix called "mated_probe_feature_map" ([image_number]_by_[feature_dimension]), and save the matrix in a mat file named "mated_probe.mat"3. Extract features of "unmated_probe" images, put them in a matrix called "unmated_probe_feature_map" ([image_number]_by_[feature_dimension]), and save the matrix in a mat file named "unmated_probe.mat"4. Put the above three mat files in the directory named "features"5. Run "test_open_set_face_identification.m" to get the identification performance*** Face Verification Evaluation ("Face_Verification_Evaluation") ***1. Extract features from "verification_images" according to the order defined by "positive_pairs_names.mat' and "negative_pairs_names.mat', respectively2. Calculate the feature distances for each pair, and put them into two 5320_by_1 matrix for positive (with name "pos_pair_scores") and negative (with name "neg_pair_scores") pairs, respectively.3. Run "test_face_verification.m" to obtain the verification performance.   # ======================== Citation ===================================== #@article{cheng2018surveillance, 	title={Surveillance Face Recognition Challenge}, 	author={Cheng, Zhiyi and Zhu, Xiatian and Gong, Shaogang}, 	journal={arXiv preprint arXiv:1804.09691}, 	year={2018} }Date: 1 June 2018